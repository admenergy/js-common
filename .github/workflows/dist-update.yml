name: Update dist/

on:
  push:
    branches:
      - main
    paths:
      - "src/**"
      - "package.json"
      - "package-lock.json"

permissions:
  contents: write
  pull-requests: write

jobs:
  update_dist:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true || github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Git
        run: |
          git config --global user.name "Workflow - Dist Update"
          git config --global user.email "--"
          git fetch
          git checkout dist-updates || git checkout -b dist-updates
          git reset --hard origin/main

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install Dependencies
        run: npm install

      - name: Build dist/
        run: npm run build

      - name: Check for changes
        id: check_changes
        run: |
          git diff --exit-code || echo "changes_detected=true" >> $GITHUB_ENV

      - name: Setup GitHub CLI
        if: env.changes_detected == 'true'
        run: |
          echo "GH_TOKEN=${{ secrets.PAT_TOKEN }}" >> $GITHUB_ENV

      - name: Commit and create Pull Request
        if: env.changes_detected == 'true'
        env:
          BASE_BRANCH: main
          HEAD_BRANCH: dist-updates
          PR_TITLE: Update `dist/` files
          PR_BODY: This PR updates the `dist/` files after code or dependency changes.
        run: |
          git add dist/
          git commit -m "Update dist files"
          git push -f origin dist-updates

          existing_pr=$(gh pr list --head dist-updates | grep dist-updates)
          if [ -z "$existing_pr" ]; then
            pr_url=$(gh pr create --base ${{ env.BASE_BRANCH }} --head ${{ env.HEAD_BRANCH }} --title "${{ env.PR_TITLE }}" --body "${{ env.PR_BODY }}")
            echo "PR created: $pr_url"

            auto_merge_enabled=$(gh api repos/$GITHUB_REPOSITORY/branches/$BASE_BRANCH/protection/required_status_checks | jq .strict)
            if [ "$auto_merge_enabled" == "true" ]; then
              gh pr merge -m --auto "$pr_url"
            fi
          else
            echo "PR already exists. Skipping pull request."
          fi
